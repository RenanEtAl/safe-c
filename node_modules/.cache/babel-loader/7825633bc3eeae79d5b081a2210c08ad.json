{"ast":null,"code":"import _slicedToArray from \"/Users/enan/Downloads/safe-crowdfunding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/enan/Downloads/safe-crowdfunding/src/components/StartAProject/LongTextInputBox.js\";\nimport React, { useState } from 'react';\n\nconst LongTextInputBox = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        characterCount = _useState2[0],\n        setCharacterCount = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        textInput = _useState4[0],\n        setTextInput = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"input-box\",\n    id: \"input-box\",\n    cols: props.cols,\n    rows: props.rows,\n    maxLength: props.maxLength,\n    onKeyDown: event => updateTextInput(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, textInput)), React.createElement(\"div\", {\n    className: \"character-counter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, characterCount, \"/135\")));\n\n  function updateTextInput(event) {\n    let newCharacterCount = characterCount;\n\n    if (characterCount < 135 && event.keyCode !== 8) {\n      return setCharacterCount(++newCharacterCount);\n    } else if (characterCount > 0 && characterCount <= 135 && event.keyCode === 8) {\n      return setCharacterCount(--newCharacterCount);\n    } else if (characterCount === 135 && event.keyCode !== 8) {\n      return setTextInput(event.target.value);\n    }\n  }\n};\n\nexport default LongTextInputBox;","map":{"version":3,"sources":["/Users/enan/Downloads/safe-crowdfunding/src/components/StartAProject/LongTextInputBox.js"],"names":["React","useState","LongTextInputBox","props","characterCount","setCharacterCount","textInput","setTextInput","cols","rows","maxLength","event","updateTextInput","newCharacterCount","keyCode","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA,oBACUF,QAAQ,CAAC,CAAD,CADlB;AAAA;AAAA,QAC3BG,cAD2B;AAAA,QACXC,iBADW;;AAAA,qBAEAJ,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAE3BK,SAF2B;AAAA,QAEhBC,YAFgB;;AAIlC,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,EAAE,EAAC,WAFP;AAGI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAHhB;AAII,IAAA,IAAI,EAAEL,KAAK,CAACM,IAJhB;AAKI,IAAA,SAAS,EAAEN,KAAK,CAACO,SALrB;AAMI,IAAA,SAAS,EAAGC,KAAD,IAAWC,eAAe,CAACD,KAAD,CANzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGL,SARH,CADF,CADA,EAaE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,cAAJ,SADF,CAbF,CADF;;AAoBA,WAASQ,eAAT,CAAyBD,KAAzB,EAAgC;AAC9B,QAAIE,iBAAiB,GAAGT,cAAxB;;AAEA,QAAIA,cAAc,GAAG,GAAjB,IAAwBO,KAAK,CAACG,OAAN,KAAkB,CAA9C,EAAiD;AAC/C,aAAOT,iBAAiB,CAAC,EAAEQ,iBAAH,CAAxB;AACD,KAFD,MAEO,IAAIT,cAAc,GAAG,CAAjB,IAAsBA,cAAc,IAAI,GAAxC,IAA+CO,KAAK,CAACG,OAAN,KAAkB,CAArE,EAAwE;AAC7E,aAAOT,iBAAiB,CAAC,EAAEQ,iBAAH,CAAxB;AACD,KAFM,MAEA,IAAIT,cAAc,KAAK,GAAnB,IAA0BO,KAAK,CAACG,OAAN,KAAkB,CAAhD,EAAmD;AACxD,aAAOP,YAAY,CAACI,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAnB;AACD;AACF;AACF,CAnCD;;AAqCA,eAAed,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst LongTextInputBox = (props) => {\n  const [characterCount, setCharacterCount] = useState(0);\n  const [textInput, setTextInput] = useState('');\n\n  return (\n    <>\n    <form>\n      <textarea \n          name=\"input-box\" \n          id=\"input-box\" \n          cols={props.cols} \n          rows={props.rows}\n          maxLength={props.maxLength}\n          onKeyDown={(event) => updateTextInput(event)}\n        >\n        {textInput}\n      </textarea>\n    </form>\n      <div className=\"character-counter\">\n        <p>{characterCount}/135</p>\n      </div>\n    </>\n  );\n\n  function updateTextInput(event) {\n    let newCharacterCount = characterCount;\n\n    if (characterCount < 135 && event.keyCode !== 8) {\n      return setCharacterCount(++newCharacterCount);\n    } else if (characterCount > 0 && characterCount <= 135 && event.keyCode === 8) {\n      return setCharacterCount(--newCharacterCount);\n    } else if (characterCount === 135 && event.keyCode !== 8) {\n      return setTextInput(event.target.value)\n    }\n  }\n}\n\nexport default LongTextInputBox;"]},"metadata":{},"sourceType":"module"}